# -*- coding: utf-8 -*-
"""Lecture 7 (comment).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1J-fl6IPGFOEW4tU52FnBng6buc3LPaSB
"""

from datetime import datetime

class Comment():

    comment_count = 0

    def __init__(self, author, content, tags = None):
        if not(Comment.is_valid_content(content)):
            raise ValueError("Invalid comment content.")


        self._author = author
        self._content = content
        self._created_on = datetime.now()
        self._tags = set()

        if (tags != None):
            for tag in tags:
                if not(Comment.is_valid_tag(tag)):
                    raise ValueError("Invalid tag.")
                else:
                    self._tags.add(tag)

        self._liked_by = []

        Comment.comment_count = Comment.comment_count + 1

    @property
    def content(self):
        return self._content

    @property
    def created_on(self):
        return self._created_on

    @property
    def tags(self):
        return self._tags

    def display(self):
        print(f"Content: {self._content}")
        print(f"Author: {self._author}")
        print(f"Timestamp: {self._created_on}")
        print(f"Likes: {len(self._liked_by)}")

    def add_tag(self, tag):
        if not(Comment.is_valid_tag(tag)):
            raise ValueError("Invalid tag.")
        else:
            self._tags.add(tag)

    def remove_tag(self, tag):
        if tag in self._tags:
            self._tags.discard(tag)

    @classmethod
    def get_comment_count(cls):
        return cls.comment_count

    @staticmethod
    def is_valid_tag(tag):
        if tag.isalnum() and len(tag) <= 30:
            return True
        else:
            return False

    @staticmethod
    def is_valid_content(content):
        if len(content) < 3 or len(content) > 2200:
            return False
        else:
            return True

#newcomm = Comment("me", "hello!")

#newcomm.add_tag("howdy")

#newcomm.add_tag("DELETEME")

#print(newcomm.tags())

#newcomm.remove_tag("unknown")

#newcomm.remove_tag("DELETEME")

#newcomm.get_comment_count()